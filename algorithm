1.Given an array of integers and a target sum, return indices of the two numbers that add up to the target.

Start

Input size of array
Input array elements
Input target sum

For i from 0 to size-1 do
    For j from i+1 to size-1 do
        If arr[i] + arr[j] = target then
            Display i and j

Stop

2.Implement binary search to find the index of a target element in a sorted array.
Start

Input size
Input sorted array elements
Input target element

Set low = 0
Set high = size - 1

While low â‰¤ high do
    mid = (low + high) / 2
    If arr[mid] = target then
        Display mid
        Stop
    Else if arr[mid] < target then
        low = mid + 1
    Else
        high = mid - 1

Display not found

Stop

3.Write a function to check if two strings are anagrams of each other.

Start

Input string1
Input string2

If length of both strings not equal then
    Not anagram

Sort string1
Sort string2

If string1 = string2 then
    Anagram
Else
    Not anagram

Stop

4.Given a string, find the length of the longest substring without repeating characters.

Start

Input string

For i from 0 to length do
    For j from i to length do
        Check substring i to j for repeats
        If no repeats then
            Update max length

Display max length

Stop

5.Write a code that counts how many palindromic substrings are present in a given string.

Start

Input string
count = 0

For i from 0 to length do
    For j from i to length do
        If substring(i, j) is palindrome then
            count = count + 1

Display count

Stop
